#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W     &kp E     &kp R                   &kp T                                                            &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A        &kp S     &kp D     &kp F                   &kp G        &trans                             &trans           &kp H        &kp J  &kp K      &kp L    &lt 5 MINUS
&mt LCTRL Z  &kp X     &kp C     &kp V                   &kp B        &kp LEFT_CONTROL                   &lt 6 DELETE     &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH
&kp LSHFT    &kp LALT  &kp LGUI  &lt_to_layer_0 1 LANG2  &lt 2 SPACE  &lt_to_layer_0 3 LANG_HANGEUL      &lt 1 BACKSPACE  &lt 2 ENTER                             &kp LEFT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp LS(Q)          &kp LS(W)          &kp LS(E)  &kp LS(R)  &kp LS(T)                                             &kp LS(Y)  &kp LS(U)  &kp LS(I)   &kp LS(O)   &kp LS(P)
&kp LS(A)          &kp LS(S)          &kp LS(D)  &kp LS(F)  &kp LS(G)  &kp F11                  &kp LCTRL         &kp LS(H)  &kp LS(J)  &kp LS(K)   &kp LS(L)   &kp LS(PLUS)
&kp LS(Z)          &kp LS(X)          &kp LS(C)  &kp LS(V)  &kp LS(B)  &kp LS(N)                &kp LS(M)         &kp LS(N)  &kp LS(M)  &kp LS(LT)  &kp LS(GT)  &kp LS(QMARK)
&kp LA(LC(LG(R)))  &kp LA(LC(LG(C)))  &trans     &kp LG(S)  &kp LG(F)  &kp LG(RIGHT_ARROW)      &kp LC(UP_ARROW)  &kp F11                                       &kp F12
            >;
        };

        NUM {
            bindings = <
&kp MINUS                 &kp N7                      &kp N8  &kp N9     &kp PLUS                                       &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)   &kp LS(N5)
&kp FSLH                  &kp N4                      &kp N5  &kp N6     &kp ASTERISK  &kp SINGLE_QUOTE      &kp RIGHT  &kp LS(NUMBER_6)  &kp LS(N7)        &kp LS(N8)        &kp LS(N9)         &kp LS(N0)
&kp N0                    &kp N1                      &kp N2  &kp N3     &kp PERIOD    &kp EQUAL             &trans     &kp LBKT          &kp RBKT          &kp ENTER         &kp RIGHT_BRACKET  &kp BACKSLASH
&kp LA(LC(LG(UP_ARROW)))  &kp LA(LC(LG(DOWN_ARROW)))  &trans  &kp LG(A)  &kp LG(Z)     &kp LG(X)             &kp LG(C)  &kp LG(V)                                                                &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                                                    &trans               &trans  &trans  &trans  &trans
&kp TAB         &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans                       &trans              &trans               &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans                       &trans              &trans               &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &kp LA(LC(LEFT_ARROW))   &trans   &kp LA(LC(RIGHT_ARROW))      &kp LG(LEFT_ARROW)  &kp LG(RIGHT_ARROW)                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &trans  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
